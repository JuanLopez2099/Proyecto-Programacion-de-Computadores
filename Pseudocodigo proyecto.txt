Pseudocodigo proyecto

importar datetime como datetime

definir funcion para calcular edad(fecha_nacimiento)
    Convertir fecha_nacimiento de cadena a formato fecha y guardar en fecha_nac
    Obtener la fecha actual y guardar en fecha_actual
    Restar fecha_actual entre fecha_nacimiento y guardar en edad
    retornar edad

Definir lista de empleados
Agregar diccionario a la lista para cada empleado
Cada diccionario debe contener 5 claves especificos
nombre como cadena
numero de identificacion como entero
fecha de nacimiento como cadena
edad como entero
sexo como cadena
numero telefonico como cadena
cargo como cadena
fecha de ingreso como cadena
tiene hijos como cadena
tipo de contrato como cadena
RH como cadena
estado civil como cadena
discapacidad como cadena
poblacion vulnerable como cadena

Definir Funcion para mostrar empleados
        Por cada empleado dentro de lista de empleados
           imprimir empleado[nombre]
                    empleado[numero de identificacion]
                    empleado[fecha de nacimiento]
                    empleado[edad]
                    empleado[sexo]
                    empleado[numero telefonico]
                    empleado[cargo]
                    empleado[fecha de ingreso]
                    empleado[tiene hijos]
                    empleado[tipo de contrato]
                    empleado[RH]
                    empleado[estado civil]
                    empleado[discapacidad]
                    empleado[poblacion_vulnerable]
        Si lista de empleados vacia
             imprimir la lista de empleados esta vacia

Definir funcion para buscar empleados con parametro de entrada(numero de identifiacion)
        por cada empleado dentro de la lista de empleados
            Si el numero de indentificacion se encuentra en la clave numero_identificacion
                  retorna el diccionario del empleado buscado
        Si no
           Retorna que el empleado no existe

Definir funcion registrar_empleado con parametros(nombre, numero_identificacion, fecha_nacimiento, edad, sexo, numero_telefonico, cargo, fecha_ingreso, tiene_hijos, tipo_contrato, RH, estado_civil, discapacidad, poblacion_vulnerable)
    

    Si nombre está vacío 
        O numero_identificacion está vacío o no es número
        O fecha_nacimiento está vacío
        O edad está vacía o no es número
        O numero_telefonico está vacío o no es número
        O cargo está vacío
        O fecha_ingreso está vacío
             Retornar "Las opciones deben ser válidas"

    Convertir numero_identificacion, edad y numero_telefonico a enteros

    Si numero_identificacion <= 0 O edad <= 0 O numero_telefonico <= 0 Entonces
        Retornar "Las opciones deben ser válidas"
    Si el conteo de "/" en fecha_nacimiento < 2 O > 2
        Retornar  La fecha de nacimiento debe estar separado por /
    Si el conteo de "/" en fecha_ingreso < 2 O > 2
        Retornar la fehca de ingreso debe estar separada por /
     sexo es igual a la clave digitada en opciones_sexo_empleado
     tiene_hijos es igual a la clave digitada en opciones_tiene_hijos
     tipo_contrato es igual a la clave digitada en opciones_tipo_contrato
     RH es igual an la clave digitada en opciones_RH
     estado_civil es igual a la clave digitada en opciones_estado_civil


    Crear nuevo_empleado como diccionario con todos los datos validados

    Por cada empleado en lista_empleados
        Si la clave nombre en nuevo_empleado  es igual a la clave nombre en empleado
           O nuevo_empleado.numero_identificacion es igual a empleado.numero_identificacion
           O nuevo_empleado.numero_telefonico es igual a empleado.numero_telefonico
               Retornar "No puede haber empleados con la misma informacion nombre/id/numero telefonico"

    Agregar nuevo_empleado a lista_empleados
    Imprimir "El empleado se ha registrado con éxito!"
    Retornar nuevo_empleado

    

Definir funcion de menu
    imprimir opcion 1 lista de empleados
             opcion 2 buscar empleado
             opcion 3 registrar empleado
             opcion 0 salir